[
  {
    "question": "배열의 끝에 하나 이상의 요소를 추가하고, 배열의 새 길이를 반환하는 메서드는 무엇인가요?",
    "answer": "push",
    "exampleCode": "push 메서드 예시\nlet arr = [1, 2, 3];\narr.push(4);\nconsole.log(arr);\n// 출력: [1, 2, 3, 4]"
  },
  {
    "question": "배열에서 마지막 요소를 제거하고 그 요소를 반환하는 메서드는 무엇인가요?",
    "answer": "pop",
    "exampleCode": "pop 메서드 예시\nlet arr = [1, 2, 3];\nlet removedElement = arr.pop();\nconsole.log(removedElement);\n// 출력: 3"
  },
  {
    "question": "배열에서 첫 번째 요소를 제거하고 그 요소를 반환하는 메서드는 무엇인가요?",
    "answer": "shift",
    "exampleCode": "shift 메서드 예시\nlet arr = [1, 2, 3];\nlet removedElement = arr.shift();\nconsole.log(removedElement);\n// 출력: 1"
  },
  {
    "question": "배열의 시작에 하나 이상의 요소를 추가하고, 배열의 새 길이를 반환하는 메서드는 무엇인가요?",
    "answer": "unshift",
    "exampleCode": "unshift 메서드 예시\nlet arr = [1, 2, 3];\narr.unshift(0);\nconsole.log(arr);\n// 출력: [0, 1, 2, 3]"
  },
  {
    "question": "배열의 일부를 얕은 복사본으로 추출하고 새로운 배열 객체로 반환하는 메서드는 무엇인가요?",
    "answer": "slice",
    "exampleCode": "slice 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\nlet sliced = arr.slice(1, 3);\nconsole.log(sliced);\n// 출력: [2, 3]"
  },
  {
    "question": "배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 변경하는 메서드는 무엇인가요?",
    "answer": "splice",
    "exampleCode": "splice 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\narr.splice(1, 2, 'a', 'b', 'c');\nconsole.log(arr);\n// 출력: [1, 'a', 'b', 'c', 4, 5]"
  },
  {
    "question": "두 개 이상의 배열을 결합하여 새 배열을 만드는 메서드는 무엇인가요?",
    "answer": "concat",
    "exampleCode": "concat 메서드 예시\nlet arr1 = [1, 2];\nlet arr2 = [3, 4];\nlet combined = arr1.concat(arr2);\nconsole.log(combined);\n// 출력: [1, 2, 3, 4]"
  },
  {
    "question": "배열의 모든 요소를 연결해 하나의 문자열로 만드는 메서드는 무엇인가요?",
    "answer": "join",
    "exampleCode": "join 메서드 예시\nlet arr = ['Hello', 'World'];\nlet combinedString = arr.join(' ');\nconsole.log(combinedString);\n// 출력: 'Hello World'"
  },
  {
    "question": "배열의 순서를 반전시키는 메서드는 무엇인가요?",
    "answer": "reverse",
    "exampleCode": "reverse 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\narr.reverse();\nconsole.log(arr);\n// 출력: [5, 4, 3, 2, 1]"
  },
  {
    "question": "배열의 요소를 적절한 위치에 정렬하는 메서드는 무엇인가요?",
    "answer": "sort",
    "exampleCode": "sort 메서드 예시\nlet arr = [3, 1, 5, 2, 4];\narr.sort();\nconsole.log(arr);\n// 출력: [1, 2, 3, 4, 5]"
  },
  {
    "question": "배열에서 지정된 요소를 찾고, 그 인덱스를 반환하는 메서드는 무엇인가요?",
    "answer": "indexOf",
    "exampleCode": "indexOf 메서드 예시\nlet arr = ['apple', 'banana', 'orange'];\nlet index = arr.indexOf('banana');\nconsole.log(index);\n// 출력: 1"
  },
  {
    "question": "배열에서 지정된 요소를 뒤에서부터 찾고, 그 인덱스를 반환하는 메서드는 무엇인가요?",
    "answer": "lastIndexOf",
    "exampleCode": "lastIndexOf 메서드 예시\nlet arr = ['apple', 'banana', 'orange', 'banana'];\nlet index = arr.lastIndexOf('banana');\nconsole.log(index);\n// 출력: 3"
  },
  {
    "question": "주어진 테스트 함수를 만족하는 배열의 첫 번째 요소의 값을 반환하는 메서드는 무엇인가요?",
    "answer": "find",
    "exampleCode": "find 메서드 예시\nlet arr = [10, 20, 30, 40, 50];\nlet result = arr.find(num => num > 25);\nconsole.log(result);\n// 출력: 30"
  },
  {
    "question": "주어진 테스트 함수를 만족하는 배열의 첫 번째 요소에 대한 인덱스를 반환하는 메서드는 무엇인가요?",
    "answer": "findIndex",
    "exampleCode": "findIndex 메서드 예시\nlet arr = [10, 20, 30, 40, 50];\nlet index = arr.findIndex(num => num > 25);\nconsole.log(index);\n// 출력: 2"
  },
  {
    "question": "테스트 함수를 통과하는 모든 요소를 모아 새 배열로 반환하는 메서드는 무엇인가요?",
    "answer": "filter",
    "exampleCode": "filter 메서드 예시\nlet arr = [10, 20, 30, 40, 50];\nlet filtered = arr.filter(num => num > 25);\nconsole.log(filtered);\n// 출력: [30, 40, 50]"
  },
  {
    "question": "배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새 배열로 반환하는 메서드는 무엇인가요?",
    "answer": "map",
    "exampleCode": "map 메서드 예시\nlet arr = [1, 2, 3];\nlet doubled = arr.map(num => num * 2);\nconsole.log(doubled);\n// 출력: [2, 4, 6]"
  },
  {
    "question": "배열의 각 요소에 대해 주어진 함수를 실행하는 메서드는 무엇인가요?",
    "answer": "forEach",
    "exampleCode": "forEach 메서드 예시\nlet arr = [1, 2, 3];\narr.forEach(num => console.log(num * 2));\n// 출력: 2, 4, 6"
  },
  {
    "question": "배열의 어떤 요소라도 주어진 테스트 함수를 통과하는지 테스트하는 메서드는 무엇인가요?",
    "answer": "some",
    "exampleCode": "some 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\nlet result = arr.some(num => num > 3);\nconsole.log(result);\n// 출력: true"
  },
  {
    "question": "배열의 모든 요소가 주어진 테스트 함수를 통과하는지 테스트하는 메서드는 무엇인가요?",
    "answer": "every",
    "exampleCode": "every 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\nlet result = arr.every(num => num > 3);\nconsole.log(result);\n// 출력: false"
  },
  {
    "question": "배열의 각 요소에 대해 주어진 리듀서(reducer) 함수를 실행하고 하나의 결과값을 반환하는 메서드는 무엇인가요?",
    "answer": "reduce",

    "exampleCode": "reduce 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\nlet sum = arr.reduce((acc, num) => acc + num, 0);\nconsole.log(sum);\n// 출력: 15"
  },
  {
    "question": "reduce()와 같지만 배열의 끝에서부터 함수를 적용하는 메서드는 무엇인가요?",
    "answer": "reduceRight",
    "exampleCode": "reduceRight 메서드 예시\nlet arr = ['a', 'b', 'c'];\nlet result = arr.reduceRight((acc, letter) => acc + letter, '');\nconsole.log(result);\n// 출력: 'cba'"
  },
  {
    "question": "배열이 특정 요소를 포함하고 있는지 판별하는 메서드는 무엇인가요?",
    "answer": "includes",
    "exampleCode": "includes 메서드 예시\nlet arr = [1, 2, 3, 4, 5];\nlet check = arr.includes(3);\nconsole.log(check);\n// 출력: true"
  },
  {
    "question": "먼저 주어진 함수를 배열의 각 요소에 매핑한 다음 결과를 새 배열로 평탄화하는 메서드는 무엇인가요?",
    "answer": "flatMap",
    "exampleCode": "flatMap 메서드 예시\nlet arr = [1, 2, 3];\nlet result = arr.flatMap(num => [num, num * 2]);\nconsole.log(result);\n// 출력: [1, 2, 2, 4, 3, 6]"
  },
  {
    "question": "지정된 깊이까지 재귀적으로 평탄화하여 새 배열을 생성하는 메서드는 무엇인가요?",
    "answer": "flat",
    "exampleCode": "flat 메서드 예시\nlet arr = [1, [2, [3, [4]]]];\nlet flattened = arr.flat(2);\nconsole.log(flattened);\n// 출력: [1, 2, 3, 4]"
  }
]
